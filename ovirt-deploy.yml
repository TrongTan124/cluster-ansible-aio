---
- name: Prepare oVirt nodes
  hosts: nodes
  become: True
  tasks:
    - name: Install oVirt repo
      yum:
        name: https://resources.ovirt.org/pub/yum-repo/ovirt-release42.rpm
        update_cache: yes
        state: present
      when: ansible_distribution|lower == "centos"

    - name: Enable baseurl in repositories
      replace: >
        dest={{ item }}
        regexp='^\#(baseurl)'
        replace='\1'
      when: ansible_distribution|lower == "centos" and apt_cache_enabled | bool
      with_items:
        - /etc/yum.repos.d/ovirt-4.2.repo
        - /etc/yum.repos.d/ovirt-4.2-dependencies.repo

    - name: Disable mirrorlist in repositories (mirror mode)
      replace: >
        dest={{ item }}
        regexp='(^mirrorlist)'
        replace='#\1'
      when: ansible_distribution|lower == "centos" and apt_cache_enabled | bool
      with_items:
        - /etc/yum.repos.d/ovirt-4.2.repo
        - /etc/yum.repos.d/ovirt-4.2-dependencies.repo

    - name: Install firewalld on worker nodes
      yum:
        name: "firewalld"
        update_cache: yes
      with_inventory_hostnames: all:!master
      retries: 5
      delay: 5

    #Fix firewalld starting issue during engine-setup
    #Â ovirt-host-deploy Ansible
    - name: Restart firewalld services
      systemd:
        state: restarted
        name: "firewalld"
      with_inventory_hostnames: all:!master

    # Fix bug on "connect interface by http(s)"
    # Fix bug on "add Host"
    # 5634 - 6166 : guest console access ports
    # 49152 - 49216 : VM migration port range
    # 54321 (vdsm)
    # 16514 (libvirt)
    #
    - name: Accept somes ports
      firewalld:
        port: "{{ item }}/tcp"
        immediate: True
        permanent: True
        state: enabled
        zone: public
      with_items:
        - 80
        - 111
        - 443
        - 2049
        - 5900-6923
        - 16514
        - 54321

    # Fix bug on "add host"
    # - name: Flush 'filter' iptables
    #   iptables:
    #     table: filter
    #     flush: True
    #   tags: flush

    - name: Ensure group 'kvm' exists
      group:
        name: kvm
        gid: 36
        state: present

    - name: Create the user 'vdsm' in the group 'kvm'
      user:
        name: "vdsm"
        uid: 36
        group: kvm

- name: Deploy oVirt Engine
  hosts: master
  become: True
  tasks:
    - include_role:
        name: oVirt.engine-setup
      vars:
        ovirt_engine_setup_admin_password: "admin"
        ovirt_engine_setup_product_type: 'ovirt'
        ovirt_engine_setup_version: "4.2"
        ovirt_engine_setup_provider_ovn_configure: false
        ovirt_engine_setup_hostname: "master"
        ovirt_engine_setup_organization: "example.com"
        ovirt_engine_setup_dwh_db_host: "master"
        ovirt_engine_setup_configure_iso_domain: true
        #set firewalld (iptables get ERROR: "is not available")
        ovirt_engine_setup_firewall_manager: null
      when: ansible_distribution|lower == "centos"

- name: Prepare Host to oVirt Engine
  hosts: master
  tasks:
    # to connect on node using "Host console"
    - name: Change root user password
      become: True
      user:
        name: root
        password: "$6$rounds=656000$GlDrOXhwDbwgtd/W$tEVY3/NEhEeH6oHzfK0kWOHWuJdmIOMVBCxDBB4uW12/1hTEcfghAbZe6HTCNodh7.79puqFykDz572g4JV0b1"

    - name: Generate SSH keys
      become: True
      shell: ssh-keygen -y -f /etc/pki/ovirt-engine/keys/engine_id_rsa > /tmp/engine_id_rsa.pub
      args:
        creates: "/tmp/engine_id_rsa.pub"

    - name: Get oVirt engine public key content and store as var
      slurp:
        src: "/tmp/engine_id_rsa.pub"
      register: ovirt_ssh_pub

    - name: Authorize oVirt engine SSH key on other nodes
      become: True
      authorized_key:
        user: root
        state: present
        key: "{{ ovirt_ssh_pub['content'] | b64decode }}"
      delegate_to: "{{ hostvars[item]['ansible_host'] }}"
      remote_user: "{{ hostvars[item]['ansible_user'] }}"
      when: hostvars[item]['ansible_host'] is defined
      with_inventory_hostnames: all:!master
